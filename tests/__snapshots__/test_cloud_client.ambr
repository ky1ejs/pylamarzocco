# serializer version: 1
# name: test_get_statistics
  dict({
    'all_widget_codes': list([
      'LAST_COFFEE',
      'COFFEE_AND_FLUSH_TREND',
    ]),
    'available_firmware_update': False,
    'ble_auth_token': None,
    'coffee_station': None,
    'connected': True,
    'connection_date': '2025-03-21T03:00:19.892000+00:00',
    'firmwares': None,
    'image_url': 'https://lion.lamarzocco.io/img/thing-model/detail/lineamicra/lineamicra-1-c-bianco.png',
    'location': None,
    'model_code': 'LINEAMICRA',
    'model_name': 'LINEA MICRA',
    'name': 'MR123456',
    'offline_mode': False,
    'require_firmware_update': False,
    'selected_widget_codes': list([
      'COFFEE_AND_FLUSH_TREND',
      'LAST_COFFEE',
    ]),
    'selected_widgets': list([
      dict({
        'code': 'COFFEE_AND_FLUSH_TREND',
        'index': 1,
        'output': dict({
          'coffees': list([
            dict({
              'timestamp': '2025-03-14T23:00:00+00:00',
              'value': 2,
            }),
            dict({
              'timestamp': '2025-03-15T23:00:00+00:00',
              'value': 2,
            }),
            dict({
              'timestamp': '2025-03-16T23:00:00+00:00',
              'value': 2,
            }),
            dict({
              'timestamp': '2025-03-17T23:00:00+00:00',
              'value': 2,
            }),
            dict({
              'timestamp': '2025-03-18T23:00:00+00:00',
              'value': 4,
            }),
            dict({
              'timestamp': '2025-03-19T23:00:00+00:00',
              'value': 3,
            }),
            dict({
              'timestamp': '2025-03-20T23:00:00+00:00',
              'value': 1,
            }),
          ]),
          'days': 7,
          'timezone': 'Europe/Berlin',
        }),
      }),
      dict({
        'code': 'LAST_COFFEE',
        'index': 1,
        'output': dict({
          'last_coffees': list([
            dict({
              'dose_index': 'Continuous',
              'dose_mode': 'Continuous',
              'dose_value_numerator': None,
              'extraction_seconds': 30.44,
              'time': '2025-03-21T05:41:19.203000+00:00',
            }),
            dict({
              'dose_index': 'Continuous',
              'dose_mode': 'Continuous',
              'dose_value_numerator': None,
              'extraction_seconds': 10.8,
              'time': '2025-03-20T16:57:07.722000+00:00',
            }),
            dict({
              'dose_index': 'Continuous',
              'dose_mode': 'Continuous',
              'dose_value_numerator': None,
              'extraction_seconds': 12.457,
              'time': '2025-03-20T05:33:46.919000+00:00',
            }),
            dict({
              'dose_index': 'Continuous',
              'dose_mode': 'Continuous',
              'dose_value_numerator': None,
              'extraction_seconds': 23.504,
              'time': '2025-03-20T05:31:42.812000+00:00',
            }),
            dict({
              'dose_index': 'Continuous',
              'dose_mode': 'Continuous',
              'dose_value_numerator': None,
              'extraction_seconds': 16.031,
              'time': '2025-03-19T14:57:35.439000+00:00',
            }),
            dict({
              'dose_index': 'Continuous',
              'dose_mode': 'Continuous',
              'dose_value_numerator': None,
              'extraction_seconds': 27.413,
              'time': '2025-03-19T14:55:42.154000+00:00',
            }),
            dict({
              'dose_index': 'Continuous',
              'dose_mode': 'Continuous',
              'dose_value_numerator': None,
              'extraction_seconds': 14.182,
              'time': '2025-03-19T06:06:19.903000+00:00',
            }),
            dict({
              'dose_index': 'Continuous',
              'dose_mode': 'Continuous',
              'dose_value_numerator': None,
              'extraction_seconds': 23.228,
              'time': '2025-03-19T06:03:55.304000+00:00',
            }),
            dict({
              'dose_index': 'DoseA',
              'dose_mode': 'PulsesType',
              'dose_value_numerator': None,
              'extraction_seconds': 12.98,
              'time': '2025-03-18T05:51:38.548000+00:00',
            }),
            dict({
              'dose_index': 'DoseA',
              'dose_mode': 'PulsesType',
              'dose_value_numerator': None,
              'extraction_seconds': 26.99,
              'time': '2025-03-18T05:50:06.774000+00:00',
            }),
            dict({
              'dose_index': 'DoseA',
              'dose_mode': 'PulsesType',
              'dose_value_numerator': None,
              'extraction_seconds': 11.069,
              'time': '2025-03-17T05:43:39.197000+00:00',
            }),
            dict({
              'dose_index': 'DoseA',
              'dose_mode': 'PulsesType',
              'dose_value_numerator': None,
              'extraction_seconds': 35.472,
              'time': '2025-03-17T05:42:03.385000+00:00',
            }),
            dict({
              'dose_index': 'DoseA',
              'dose_mode': 'PulsesType',
              'dose_value_numerator': None,
              'extraction_seconds': 11.494,
              'time': '2025-03-16T06:23:48.119000+00:00',
            }),
            dict({
              'dose_index': 'DoseA',
              'dose_mode': 'PulsesType',
              'dose_value_numerator': None,
              'extraction_seconds': 39.915,
              'time': '2025-03-16T06:22:27.433000+00:00',
            }),
            dict({
              'dose_index': 'DoseA',
              'dose_mode': 'PulsesType',
              'dose_value_numerator': None,
              'extraction_seconds': 13.891,
              'time': '2025-03-15T05:51:30.205000+00:00',
            }),
          ]),
        }),
      }),
    ]),
    'serial_number': 'MR123456',
    'type': 'CoffeeMachine',
  })
# ---
# name: test_get_thing_dashboard
  dict({
    'available_firmware_update': False,
    'ble_auth_token': None,
    'coffee_station': None,
    'config': dict({
      'CMBackFlush': dict({
        'last_cleaning_start_time': None,
        'status': 'Off',
      }),
      'CMCoffeeBoiler': dict({
        'enabled': True,
        'enabled_supported': False,
        'ready_start_time': None,
        'status': 'StandBy',
        'target_temperature': 94.0,
        'target_temperature_max': 100,
        'target_temperature_min': 80,
        'target_temperature_step': 0.1,
      }),
      'CMMachineStatus': dict({
        'available_modes': list([
          'BrewingMode',
          'StandBy',
        ]),
        'brewing_start_time': None,
        'mode': 'StandBy',
        'next_status': None,
        'status': 'StandBy',
      }),
      'CMPreBrewing': dict({
        'available_modes': list([
          'PreBrewing',
          'PreInfusion',
          'Disabled',
        ]),
        'dose_index_supported': False,
        'mode': 'PreInfusion',
        'times': dict({
          'pre_brewing': list([
            dict({
              'dose_index': 'ByGroup',
              'seconds': dict({
                'In': 5.0,
                'Out': 5.0,
              }),
              'seconds_max': dict({
                'In': 9.0,
                'Out': 9.0,
              }),
              'seconds_min': dict({
                'In': 1.0,
                'Out': 1.0,
              }),
              'seconds_step': dict({
                'In': 0.1,
                'Out': 0.1,
              }),
            }),
          ]),
          'pre_infusion': list([
            dict({
              'dose_index': 'ByGroup',
              'seconds': dict({
                'In': 0.0,
                'Out': 4.0,
              }),
              'seconds_max': dict({
                'In': 25.0,
                'Out': 25.0,
              }),
              'seconds_min': dict({
                'In': 1.0,
                'Out': 1.0,
              }),
              'seconds_step': dict({
                'In': 0.1,
                'Out': 0.1,
              }),
            }),
          ]),
        }),
      }),
      'CMPreExtraction': dict({
        'available_modes': list([
          'PreBrewing',
          'PreInfusion',
          'Disabled',
        ]),
        'mode': 'PreInfusion',
        'times': dict({
          'time_in': dict({
            'seconds': 0.0,
            'seconds_max': dict({
              'pre_brewing': 9.0,
              'pre_infusion': 9.0,
            }),
            'seconds_min': dict({
              'pre_brewing': 2.0,
              'pre_infusion': 2.0,
            }),
            'seconds_step': dict({
              'pre_brewing': 0.1,
              'pre_infusion': 0.1,
            }),
          }),
          'time_out': dict({
            'seconds': 4.0,
            'seconds_max': dict({
              'pre_brewing': 9.0,
              'pre_infusion': 25.0,
            }),
            'seconds_min': dict({
              'pre_brewing': 1.0,
              'pre_infusion': 1.0,
            }),
            'seconds_step': dict({
              'pre_brewing': 0.1,
              'pre_infusion': 0.1,
            }),
          }),
        }),
      }),
      'CMSteamBoilerLevel': dict({
        'enabled': True,
        'enabled_supported': True,
        'ready_start_time': None,
        'status': 'StandBy',
        'target_level': 'Level3',
        'target_level_supported': True,
      }),
    }),
    'connected': True,
    'connection_date': '2025-03-21T03:00:19.892000+00:00',
    'image_url': 'https://lion.lamarzocco.io/img/thing-model/detail/lineamicra/lineamicra-1-c-bianco.png',
    'location': None,
    'model_code': 'LINEAMICRA',
    'model_name': 'LINEA MICRA',
    'name': 'MR123456',
    'offline_mode': False,
    'require_firmware_update': False,
    'serial_number': 'MR123456',
    'type': 'CoffeeMachine',
    'widgets': list([
      dict({
        'code': 'CMMachineStatus',
        'index': 1,
        'output': dict({
          'available_modes': list([
            'BrewingMode',
            'StandBy',
          ]),
          'brewing_start_time': None,
          'mode': 'StandBy',
          'next_status': None,
          'status': 'StandBy',
        }),
      }),
      dict({
        'code': 'CMCoffeeBoiler',
        'index': 1,
        'output': dict({
          'enabled': True,
          'enabled_supported': False,
          'ready_start_time': None,
          'status': 'StandBy',
          'target_temperature': 94.0,
          'target_temperature_max': 100,
          'target_temperature_min': 80,
          'target_temperature_step': 0.1,
        }),
      }),
      dict({
        'code': 'CMSteamBoilerLevel',
        'index': 1,
        'output': dict({
          'enabled': True,
          'enabled_supported': True,
          'ready_start_time': None,
          'status': 'StandBy',
          'target_level': 'Level3',
          'target_level_supported': True,
        }),
      }),
      dict({
        'code': 'CMPreExtraction',
        'index': 1,
        'output': dict({
          'available_modes': list([
            'PreBrewing',
            'PreInfusion',
            'Disabled',
          ]),
          'mode': 'PreInfusion',
          'times': dict({
            'time_in': dict({
              'seconds': 0.0,
              'seconds_max': dict({
                'pre_brewing': 9.0,
                'pre_infusion': 9.0,
              }),
              'seconds_min': dict({
                'pre_brewing': 2.0,
                'pre_infusion': 2.0,
              }),
              'seconds_step': dict({
                'pre_brewing': 0.1,
                'pre_infusion': 0.1,
              }),
            }),
            'time_out': dict({
              'seconds': 4.0,
              'seconds_max': dict({
                'pre_brewing': 9.0,
                'pre_infusion': 25.0,
              }),
              'seconds_min': dict({
                'pre_brewing': 1.0,
                'pre_infusion': 1.0,
              }),
              'seconds_step': dict({
                'pre_brewing': 0.1,
                'pre_infusion': 0.1,
              }),
            }),
          }),
        }),
      }),
      dict({
        'code': 'CMPreBrewing',
        'index': 1,
        'output': dict({
          'available_modes': list([
            'PreBrewing',
            'PreInfusion',
            'Disabled',
          ]),
          'dose_index_supported': False,
          'mode': 'PreInfusion',
          'times': dict({
            'pre_brewing': list([
              dict({
                'dose_index': 'ByGroup',
                'seconds': dict({
                  'In': 5.0,
                  'Out': 5.0,
                }),
                'seconds_max': dict({
                  'In': 9.0,
                  'Out': 9.0,
                }),
                'seconds_min': dict({
                  'In': 1.0,
                  'Out': 1.0,
                }),
                'seconds_step': dict({
                  'In': 0.1,
                  'Out': 0.1,
                }),
              }),
            ]),
            'pre_infusion': list([
              dict({
                'dose_index': 'ByGroup',
                'seconds': dict({
                  'In': 0.0,
                  'Out': 4.0,
                }),
                'seconds_max': dict({
                  'In': 25.0,
                  'Out': 25.0,
                }),
                'seconds_min': dict({
                  'In': 1.0,
                  'Out': 1.0,
                }),
                'seconds_step': dict({
                  'In': 0.1,
                  'Out': 0.1,
                }),
              }),
            ]),
          }),
        }),
      }),
      dict({
        'code': 'CMBackFlush',
        'index': 1,
        'output': dict({
          'last_cleaning_start_time': None,
          'status': 'Off',
        }),
      }),
    ]),
  })
# ---
# name: test_get_thing_settings
  dict({
    'actual_firmwares': list([
      dict({
        'available_update': None,
        'build_version': 'v5.0.9',
        'change_log': '''
          What’s new in this version:
          
          * New La Marzocco compatibility
          * Improved connectivity
          * Improved pairing process
          * Improved statistics
          * Boilers heating time
          * Last backflush date (GS3 MP excluded)
          * Automatic gateway updates option
        ''',
        'status': 'Updated',
        'thing_model_code': 'LineaMicra',
        'type': 'Gateway',
      }),
      dict({
        'available_update': None,
        'build_version': 'v1.17',
        'change_log': 'None',
        'status': 'Updated',
        'thing_model_code': 'LineaMicra',
        'type': 'Machine',
      }),
    ]),
    'auto_update': False,
    'auto_update_supported': True,
    'available_firmware_update': False,
    'ble_auth_token': None,
    'coffee_station': None,
    'connected': True,
    'connection_date': '2025-03-21T03:00:19.892000+00:00',
    'cropster_active': False,
    'cropster_supported': False,
    'factory_reset_supported': True,
    'hemro_active': False,
    'hemro_supported': False,
    'image_url': 'https://lion.lamarzocco.io/img/thing-model/detail/lineamicra/lineamicra-1-c-bianco.png',
    'is_plumbed_in': True,
    'location': None,
    'model_code': 'LINEAMICRA',
    'model_name': 'LINEA MICRA',
    'name': 'MR123456',
    'offline_mode': False,
    'plumb_in_supported': True,
    'require_firmware_update': False,
    'serial_number': 'MR123456',
    'type': 'CoffeeMachine',
    'wifi_rssi': -51,
    'wifi_ssid': 'MyWifi',
  })
# ---
# name: test_list_things
  dict({
    'available_firmware_update': False,
    'ble_auth_token': None,
    'coffee_station': None,
    'connected': True,
    'connection_date': '2025-03-21T03:00:19.892000+00:00',
    'image_url': 'https://lion.lamarzocco.io/img/thing-model/detail/lineamicra/lineamicra-1-c-bianco.png',
    'location': None,
    'model_code': 'LINEAMICRA',
    'model_name': 'LINEA MICRA',
    'name': 'MR123456',
    'offline_mode': False,
    'require_firmware_update': False,
    'serial_number': 'MR123456',
    'type': 'CoffeeMachine',
  })
# ---
